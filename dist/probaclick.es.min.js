/**
  * ProbaClick - Do something when someone is probably going to click something.
  * Author: Alex MacArthur
  * Version: v1.1.1
  * License: MIT
  * URL: https://github.com/alexmacarthur/probaclick#readme
  */
class t{constructor(t){let{max:e,delay:i,callback:s,count:r}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};this.max=e,this.link=t,this.callback=s,this.triggers={delay:i,count:r},this.hasJustFired=!1,this.totalFireCount=0,this.hoverStart=0,this.timeout=null,this.store={time:0,interactions:0},this.eventHandlers={mouseover:this.handleMouseOver.bind(this),mouseleave:this.handleMouseLeave.bind(this)},this.updateListeners("add")}handleMouseOver(){this.hasJustFired=!1,this.hoverStart=Date.now(),this.store.interactions++,this.maybeFireBasedOnCount()||this.maybeFireBasedOnTime()}maybeFireBasedOnCount(){return null!==this.triggers.count&&(this.store.interactions>=this.triggers.count&&(this.fire(),!0))}maybeFireBasedOnTime(){return null!==this.triggers.delay&&(this.timeout=setTimeout(()=>{this.fire()},this.triggers.delay-this.store.time),this.timeout)}fire(){this.callback(this.link),this.totalFireCount++,this.resetStore(),this.hasJustFired=!0,null!==this.max&&this.totalFireCount>=this.max&&this.updateListeners("remove")}handleMouseLeave(){clearTimeout(this.timeout),this.hasJustFired||this.updateStoreTime()}updateListeners(t){for(let e in this.eventHandlers)this.link["".concat(t,"EventListener")](e,this.eventHandlers[e])}resetStore(){this.store={time:0,interactions:0}}updateStoreTime(){this.store.time=this.store.time+(Date.now()-this.hoverStart)}}function e(t){return"string"==typeof t?t=document.querySelectorAll(t):t instanceof NodeList||(t=[t]),[].slice.call(t)}export default function(i){let{max:s=null,delay:r=500,count:n=null,callback:a=(()=>{})}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return(i=e(i)).length?i.map(e=>new t(e,{delay:r,callback:a,max:s,count:n})):[]}
