/*!
 * 
 *   probaclick - Predict a and respond to a user's intention by the amount of time they spend hovering over an element.
 *   Author: Alex MacArthur
 *   Version: v1.0.0
 *   URL: https://github.com/alexmacarthur/probaclick#readme
 *   License: MIT
 * 
 */
(function(a,b){'object'==typeof exports&&'object'==typeof module?module.exports=b():'function'==typeof define&&define.amd?define([],b):'object'==typeof exports?exports.ProbaClick=b():a.ProbaClick=b()})('undefined'==typeof self?this:self,function(){return function(a){function b(d){if(c[d])return c[d].exports;var e=c[d]={i:d,l:!1,exports:{}};return a[d].call(e.exports,e,e.exports,b),e.l=!0,e.exports}var c={};return b.m=a,b.c=c,b.d=function(a,c,d){b.o(a,c)||Object.defineProperty(a,c,{configurable:!1,enumerable:!0,get:d})},b.n=function(a){var c=a&&a.__esModule?function(){return a['default']}:function(){return a};return b.d(c,'a',c),c},b.o=function(a,b){return Object.prototype.hasOwnProperty.call(a,b)},b.p='',b(b.s=0)}([function(a,b,c){'use strict';Object.defineProperty(b,'__esModule',{value:!0});var d=c(1),e=c(2);b['default']=function(a,{max:b=null,delay:c=500,callback:f=()=>{}}={}){return a=Object(e.a)(a),a.length?a.map((a)=>{return new d.a(a,{delay:c,callback:f,max:b})}):[]}},function(a,b){'use strict';b.a=class{constructor(a,{max:b,delay:c,callback:d}={}){this.max=b,this.link=a,this.delay=c,this.callback=d,this.fireCount=0,this.hoverStart=0,this.timerStore=0,this.timeout=null,this.eventHandlers={mouseover:this.handleMouseOver.bind(this),mouseleave:this.handleMouseLeave.bind(this)},this.attachListeners()}attachListeners(){this.link.addEventListener('mouseover',this.eventHandlers.mouseover),this.link.addEventListener('mouseleave',this.eventHandlers.mouseleave)}handleMouseOver(){this.hoverStart=Date.now(),this.timeout=setTimeout(()=>{this.callback(this.link),this.fireCount++,this.timerStore=0,null!==this.max&&this.fireCount>=this.max&&this.removeListeners()},this.delay-this.timerStore)}handleMouseLeave(){this.updateTimerStore(),clearTimeout(this.timeout)}removeListeners(){for(let a in this.eventHandlers)this.link.removeEventListener(a,this.eventHandlers[a])}updateTimerStore(){return this.timerStore+=Date.now()-this.hoverStart,this.timerStore}}},function(a,b){'use strict';b.a=function(a){return'string'==typeof a?a=document.querySelectorAll(a):!(a instanceof NodeList)&&(a=[a]),[].slice.call(a)}}])['default']});