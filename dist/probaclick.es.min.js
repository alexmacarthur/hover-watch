/**
  * ProbaClick (v1.1.1) - Do something when someone is probably going to click something.
  * Author: Alex MacArthur
  * License: MIT
  * URL: https://github.com/alexmacarthur/probaclick
  */
function n(n){var{max:t,delay:e,callback:o,count:i}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};function u(){o(n),b++,m(),y=!0,null!==t&&b>=t&&a("remove")}function c(){return clearTimeout(x),y||s()}function l(){return y=!1,h=Date.now(),g.interactions++,r()||f()}function a(t){for(var e in k)n["".concat(t,"EventListener")](e,k[e])}function r(){return null!==v.count&&(g.interactions>=v.count&&(u(),!0))}function f(){return null!==v.delay&&(x=setTimeout(()=>{u()},d()))}function d(){return v.delay-g.time}function m(){g={time:0,interactions:0}}function s(){g.time=g.time+(Date.now()-h)}var v={delay:e,count:i},y=!1,b=0,h=0,x=null,g={time:0,interactions:0},k={mouseover:l.bind(this),mouseleave:c.bind(this)};a("add")}function t(n){return"string"==typeof n?n=document.querySelectorAll(n):n instanceof NodeList||(n=[n]),[].slice.call(n)}export default function(e){var{max:o=null,delay:i=500,count:u=null,callback:c=(()=>{})}=arguments.length>1&&void 0!==arguments[1]?arguments[1]:{};return t(e).map(t=>new n(t,{delay:i,callback:c,max:o,count:u}))}
